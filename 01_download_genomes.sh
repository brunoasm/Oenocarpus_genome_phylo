#!/bin/bash
# 01_download_genomes.sh
# Downloads genome assemblies from NCBI using accessions from sources/genomes_to_download.txt
# Generated by Claude phylo_from_buscos skill

set -e

echo "=========================================="
echo "STEP 1: Download NCBI Genome Assemblies"
echo "=========================================="
echo ""

# Activate conda environment
source "$(conda info --base)/etc/profile.d/conda.sh"
conda activate phylo

## Create output directory for genomes
#mkdir -p genomes
#cd genomes
#
## Read accessions from file (skip header and empty lines)
#accessions=$(awk -F',' 'NR>1 && NF>0 {print $2}' ../sources/genomes_to_download.txt | tr '\n' ' ')
#
#echo "Found the following accessions to download:"
#echo "$accessions"
#echo ""
#
## Download genomes using NCBI datasets CLI
#echo "Downloading genomes..."
#python ../scripts/download_ncbi_genomes.py --assemblies $accessions -o ncbi_genomes.zip
#
## Extract the downloaded archive
#echo ""
#echo "Extracting genomes..."
#unzip -q ncbi_genomes.zip
#
## Find all FASTA files in the extracted directory
#echo ""
#echo "Locating genome FASTA files..."
#find ncbi_dataset/data -name "*.fna" -type f > downloaded_genomes.txt
#
## Display what was downloaded
#echo ""
#echo "Downloaded genomes:"
#cat downloaded_genomes.txt
#echo ""
#
## Move to main genomes directory and rename with meaningful names
#echo "Renaming genomes with meaningful sample names..."
#cd ..
#
## Create renaming template
#echo "Creating renaming template..."
#python scripts/rename_genomes.py --create-template genomes/ncbi_dataset/data/*/*.fna > genomes/samples_template.tsv
#
## Create actual mapping with species names from the original file
#echo "Generating species name mappings..."
#cat > genomes/samples.tsv << 'EOF'
#old_filename	new_filename
#EOF
#
## Parse the genomes_to_download.txt and create renaming mappings
#while IFS=',' read -r species accession; do
#    if [ "$species" != "species" ] && [ -n "$species" ]; then
#        # Remove dots from accession for cleaner filenames
#        clean_accession=$(echo "$accession" | tr -d '.')
#        # Find the actual downloaded file
#        downloaded_file=$(find genomes/ncbi_dataset/data -name "${accession}*.fna" | head -1)
#        if [ -n "$downloaded_file" ]; then
#            basename_file=$(basename "$downloaded_file")
#            new_name="${clean_accession}_${species}.fna"
#            echo -e "${basename_file}\t${new_name}" >> genomes/samples.tsv
#        fi
#    fi
#done < sources/genomes_to_download.txt
#
#echo ""
#echo "Renaming map created. Preview:"
#cat genomes/samples.tsv
#echo ""

# Apply renaming
cd genomes/ncbi_dataset/
find . -name "*.fna" -exec mv {} .. \; 2>/dev/null || true
cd ../

# Apply the renaming using the mapping file
while IFS=$'\t' read -r old_file new_file; do
    if [ "$old_file" != "old_filename" ] && [ -f "ncbi_dataset/data/$old_file" ]; then
        cp "ncbi_dataset/data/$old_file" "$new_file"
        echo "Renamed: $old_file -> $new_file"
    fi
done < samples.tsv

# Also copy the local Oenocarpus mapora genome
echo ""
echo "Copying local Oenocarpus mapora genome..."
cp ../sources/palm_two_cells.asm.p_ctg.fasta Oenocarpus_mapora.fasta
echo "Copied: palm_two_cells.asm.p_ctg.fasta -> Oenocarpus_mapora.fasta"

cd ..

# Create final genome list
echo ""
echo "Creating genome list for downstream analysis..."
ls genomes/*.fasta genomes/*.fna 2>/dev/null | grep -v "ncbi_dataset" > genome_list.txt

echo ""
echo "Final genome list:"
cat genome_list.txt
echo ""
echo "Total genomes: $(wc -l < genome_list.txt)"
echo ""
echo "=========================================="
echo "STEP 1 Complete!"
echo "=========================================="
echo ""
echo "Output files:"
echo "  - genome_list.txt       : List of all genome paths"
echo "  - genomes/*.fasta       : Renamed genome assemblies"
echo ""
echo "Next step: Run 02_run_compleasm.sh to identify single-copy orthologs"
echo ""
